name: Build Universal DMG

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Menubar RunCat universal binaries
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Locate Xcode project/workspace
        id: xcode-locator
        run: |
          set -euo pipefail
          workspace=$(find . -maxdepth 1 -name "*.xcworkspace" -print -quit)
          if [ -n "$workspace" ]; then
            echo "filetype=workspace" >> "$GITHUB_OUTPUT"
            echo "file=$workspace" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          project=$(find . -maxdepth 1 -name "*.xcodeproj" -print -quit)
          if [ -n "$project" ]; then
            echo "filetype=project" >> "$GITHUB_OUTPUT"
            echo "file=$project" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "::error::No .xcworkspace or .xcodeproj found in repository root" >&2
          exit 1

      - name: Detect default scheme
        run: |
          set -euo pipefail
          filetype="${{ steps.xcode-locator.outputs.filetype }}"
          file="${{ steps.xcode-locator.outputs.file }}"
          mkdir -p build
          if [ "$filetype" = "workspace" ]; then
            xcodebuild -list -json -workspace "$file" > build/xcode_info.json
          else
            xcodebuild -list -json -project "$file" > build/xcode_info.json
          fi
          SCHEME=$(ruby - <<'RUBY'
            require "json"
            data = JSON.parse(File.read("build/xcode_info.json"))
            scheme = data.dig("project", "targets")&.first || data.dig("workspace", "schemes")&.first
            abort("Unable to determine default scheme") unless scheme
            puts scheme
          RUBY
          )
          echo "$SCHEME" > default_scheme
          echo "SCHEME=$SCHEME" >> "$GITHUB_ENV"

      - name: Build arm64 archive
        run: |
          set -euo pipefail
          scheme=${SCHEME:-$(cat default_scheme)}
          filetype="${{ steps.xcode-locator.outputs.filetype }}"
          file="${{ steps.xcode-locator.outputs.file }}"
          xcodebuild archive \
            -scheme "$scheme" \
            -$filetype "$file" \
            -configuration Release \
            -destination "generic/platform=macOS" \
            -sdk macosx \
            SDKROOT=macosx \
            ARCHS=arm64 VALID_ARCHS=arm64 ONLY_ACTIVE_ARCH=NO \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO \
            -archivePath build/arm64.xcarchive

      - name: Build x86_64 archive
        run: |
          set -euo pipefail
          scheme=${SCHEME:-$(cat default_scheme)}
          filetype="${{ steps.xcode-locator.outputs.filetype }}"
          file="${{ steps.xcode-locator.outputs.file }}"
          xcodebuild archive \
            -scheme "$scheme" \
            -$filetype "$file" \
            -configuration Release \
            -destination "generic/platform=macOS" \
            -sdk macosx \
            SDKROOT=macosx \
            ARCHS=x86_64 VALID_ARCHS=x86_64 ONLY_ACTIVE_ARCH=NO \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO \
            -archivePath build/x86_64.xcarchive

      - name: Create universal app bundle
        run: |
          set -euo pipefail
          APP_NAME="Menubar RunCat.app"
          BIN_REL_PATH="Contents/MacOS/Menubar RunCat"
          mkdir -p build/output
          cp -R "build/arm64.xcarchive/Products/Applications/$APP_NAME" build/output/
          lipo -create \
            "build/arm64.xcarchive/Products/Applications/$APP_NAME/$BIN_REL_PATH" \
            "build/x86_64.xcarchive/Products/Applications/$APP_NAME/$BIN_REL_PATH" \
            -output "build/output/$APP_NAME/$BIN_REL_PATH"

      - name: Create DMG
        run: |
          set -euo pipefail
          DMG_PATH="build/Menubar-RunCat-universal.dmg"
          hdiutil create \
            -volname "Menubar RunCat" \
            -srcfolder "build/output/Menubar RunCat.app" \
            -ov -format UDZO "$DMG_PATH"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: menubar-runcat-universal-dmg
          path: build/Menubar-RunCat-universal.dmg
